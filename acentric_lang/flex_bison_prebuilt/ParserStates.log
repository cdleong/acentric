Terminals unused in grammar

   REST
   CARAT
   LPAREN
   RPAREN
   WHITESPACE
   SEMICOLON
   DOTS


Grammar

    0 $accept: root END

    1 root: %empty
    2     | root complete_phrase NEWLINE
    3     | root complete_phrase error NEWLINE
    4     | root error NEWLINE
    5     | root NEWLINE

    6 complete_phrase: note
    7                | interval
    8                | chord
    9                | UNHANDLED_CHAR

   10 note: BASIC_NOTE offset octave
   11     | note PLUS_SIGN interval
   12     | note MINUS_SIGN interval
   13     | interval PLUS_SIGN note

   14 offset: %empty
   15       | FLAT offset
   16       | SHARP offset

   17 octave: %empty
   18       | POS_INTEGER
   19       | ZERO

   20 interval: INTERVAL_TYPE POS_INTEGER
   21         | note COLON note
   22         | interval PLUS_SIGN interval
   23         | interval MINUS_SIGN interval

   24 interval_list: %empty
   25              | interval interval_list
   26              | interval UNDERSCORE interval_list

   27 chord: note STAR interval_list


Terminals, with rules where they appear

END (0) 0
error (256) 3 4
REST (258)
SHARP (259) 16
FLAT (260) 15
MINUS_SIGN (261) 12 23
PLUS_SIGN (262) 11 13 22
UNDERSCORE (263) 26
CARAT (264)
STAR (265) 27
LPAREN (266)
RPAREN (267)
WHITESPACE (268)
COLON (269) 21
SEMICOLON (270)
ZERO (271) 19
NEWLINE (272) 2 3 4 5
BASIC_NOTE (273) 10
INTERVAL_TYPE (274) 20
UNHANDLED_CHAR (275) 9
POS_INTEGER (276) 18 20
DOTS (277)


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
root (24)
    on left: 1 2 3 4 5, on right: 0 2 3 4 5
complete_phrase (25)
    on left: 6 7 8 9, on right: 2 3
note (26)
    on left: 10 11 12 13, on right: 6 11 12 13 21 27
offset (27)
    on left: 14 15 16, on right: 10 15 16
octave (28)
    on left: 17 18 19, on right: 10
interval (29)
    on left: 20 21 22 23, on right: 7 11 12 13 22 23 25 26
interval_list (30)
    on left: 24 25 26, on right: 25 26 27
chord (31)
    on left: 27, on right: 8


State 0

    0 $accept: . root END
    1 root: . %empty
    2     | . root complete_phrase NEWLINE
    3     | . root complete_phrase error NEWLINE
    4     | . root error NEWLINE
    5     | . root NEWLINE

    $default  reduce using rule 1 (root)

    root  go to state 1


State 1

    0 $accept: root . END
    2 root: root . complete_phrase NEWLINE
    3     | root . complete_phrase error NEWLINE
    4     | root . error NEWLINE
    5     | root . NEWLINE
    6 complete_phrase: . note
    7                | . interval
    8                | . chord
    9                | . UNHANDLED_CHAR
   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval
   27 chord: . note STAR interval_list

    END             shift, and go to state 2
    error           shift, and go to state 3
    NEWLINE         shift, and go to state 4
    BASIC_NOTE      shift, and go to state 5
    INTERVAL_TYPE   shift, and go to state 6
    UNHANDLED_CHAR  shift, and go to state 7

    complete_phrase  go to state 8
    note             go to state 9
    interval         go to state 10
    chord            go to state 11


State 2

    0 $accept: root END .

    $default  accept


State 3

    4 root: root error . NEWLINE

    NEWLINE  shift, and go to state 12


State 4

    5 root: root NEWLINE .

    $default  reduce using rule 5 (root)


State 5

   10 note: BASIC_NOTE . offset octave
   14 offset: . %empty  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, ZERO, NEWLINE, BASIC_NOTE, INTERVAL_TYPE, POS_INTEGER]
   15       | . FLAT offset
   16       | . SHARP offset

    SHARP  shift, and go to state 13
    FLAT   shift, and go to state 14

    $default  reduce using rule 14 (offset)

    offset  go to state 15


State 6

   20 interval: INTERVAL_TYPE . POS_INTEGER

    POS_INTEGER  shift, and go to state 16


State 7

    9 complete_phrase: UNHANDLED_CHAR .

    $default  reduce using rule 9 (complete_phrase)


State 8

    2 root: root complete_phrase . NEWLINE
    3     | root complete_phrase . error NEWLINE

    error    shift, and go to state 17
    NEWLINE  shift, and go to state 18


State 9

    6 complete_phrase: note .  [error, NEWLINE]
   11 note: note . PLUS_SIGN interval
   12     | note . MINUS_SIGN interval
   21 interval: note . COLON note
   27 chord: note . STAR interval_list

    MINUS_SIGN  shift, and go to state 19
    PLUS_SIGN   shift, and go to state 20
    STAR        shift, and go to state 21
    COLON       shift, and go to state 22

    $default  reduce using rule 6 (complete_phrase)


State 10

    7 complete_phrase: interval .  [error, NEWLINE]
   13 note: interval . PLUS_SIGN note
   22 interval: interval . PLUS_SIGN interval
   23         | interval . MINUS_SIGN interval

    MINUS_SIGN  shift, and go to state 23
    PLUS_SIGN   shift, and go to state 24

    $default  reduce using rule 7 (complete_phrase)


State 11

    8 complete_phrase: chord .

    $default  reduce using rule 8 (complete_phrase)


State 12

    4 root: root error NEWLINE .

    $default  reduce using rule 4 (root)


State 13

   14 offset: . %empty  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, ZERO, NEWLINE, BASIC_NOTE, INTERVAL_TYPE, POS_INTEGER]
   15       | . FLAT offset
   16       | . SHARP offset
   16       | SHARP . offset

    SHARP  shift, and go to state 13
    FLAT   shift, and go to state 14

    $default  reduce using rule 14 (offset)

    offset  go to state 25


State 14

   14 offset: . %empty  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, ZERO, NEWLINE, BASIC_NOTE, INTERVAL_TYPE, POS_INTEGER]
   15       | . FLAT offset
   15       | FLAT . offset
   16       | . SHARP offset

    SHARP  shift, and go to state 13
    FLAT   shift, and go to state 14

    $default  reduce using rule 14 (offset)

    offset  go to state 26


State 15

   10 note: BASIC_NOTE offset . octave
   17 octave: . %empty  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, NEWLINE, BASIC_NOTE, INTERVAL_TYPE]
   18       | . POS_INTEGER
   19       | . ZERO

    ZERO         shift, and go to state 27
    POS_INTEGER  shift, and go to state 28

    $default  reduce using rule 17 (octave)

    octave  go to state 29


State 16

   20 interval: INTERVAL_TYPE POS_INTEGER .

    $default  reduce using rule 20 (interval)


State 17

    3 root: root complete_phrase error . NEWLINE

    NEWLINE  shift, and go to state 30


State 18

    2 root: root complete_phrase NEWLINE .

    $default  reduce using rule 2 (root)


State 19

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   12     | note MINUS_SIGN . interval
   13     | . interval PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval

    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    note      go to state 31
    interval  go to state 32


State 20

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   11     | note PLUS_SIGN . interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval

    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    note      go to state 31
    interval  go to state 33


State 21

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval
   24 interval_list: . %empty  [error, NEWLINE]
   25              | . interval interval_list
   26              | . interval UNDERSCORE interval_list
   27 chord: note STAR . interval_list

    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    $default  reduce using rule 24 (interval_list)

    note           go to state 31
    interval       go to state 34
    interval_list  go to state 35


State 22

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   21         | note COLON . note
   22         | . interval PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval

    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    note      go to state 36
    interval  go to state 37


State 23

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval
   23         | interval MINUS_SIGN . interval

    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    note      go to state 31
    interval  go to state 38


State 24

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   13     | interval PLUS_SIGN . note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   22         | interval PLUS_SIGN . interval
   23         | . interval MINUS_SIGN interval

    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    note      go to state 39
    interval  go to state 40


State 25

   16 offset: SHARP offset .

    $default  reduce using rule 16 (offset)


State 26

   15 offset: FLAT offset .

    $default  reduce using rule 15 (offset)


State 27

   19 octave: ZERO .

    $default  reduce using rule 19 (octave)


State 28

   18 octave: POS_INTEGER .

    $default  reduce using rule 18 (octave)


State 29

   10 note: BASIC_NOTE offset octave .

    $default  reduce using rule 10 (note)


State 30

    3 root: root complete_phrase error NEWLINE .

    $default  reduce using rule 3 (root)


State 31

   11 note: note . PLUS_SIGN interval
   12     | note . MINUS_SIGN interval
   21 interval: note . COLON note

    MINUS_SIGN  shift, and go to state 19
    PLUS_SIGN   shift, and go to state 20
    COLON       shift, and go to state 22


State 32

   12 note: note MINUS_SIGN interval .  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, NEWLINE, BASIC_NOTE, INTERVAL_TYPE]
   13     | interval . PLUS_SIGN note
   22 interval: interval . PLUS_SIGN interval
   23         | interval . MINUS_SIGN interval

    $default  reduce using rule 12 (note)

    Conflict between rule 12 and token MINUS_SIGN resolved as reduce (%left MINUS_SIGN).
    Conflict between rule 12 and token PLUS_SIGN resolved as reduce (%left PLUS_SIGN).


State 33

   11 note: note PLUS_SIGN interval .  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, NEWLINE, BASIC_NOTE, INTERVAL_TYPE]
   13     | interval . PLUS_SIGN note
   22 interval: interval . PLUS_SIGN interval
   23         | interval . MINUS_SIGN interval

    $default  reduce using rule 11 (note)

    Conflict between rule 11 and token MINUS_SIGN resolved as reduce (%left MINUS_SIGN).
    Conflict between rule 11 and token PLUS_SIGN resolved as reduce (%left PLUS_SIGN).


State 34

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   13     | interval . PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   22         | interval . PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval
   23         | interval . MINUS_SIGN interval
   24 interval_list: . %empty  [error, NEWLINE]
   25              | . interval interval_list
   25              | interval . interval_list
   26              | . interval UNDERSCORE interval_list
   26              | interval . UNDERSCORE interval_list

    MINUS_SIGN     shift, and go to state 23
    PLUS_SIGN      shift, and go to state 24
    UNDERSCORE     shift, and go to state 41
    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    $default  reduce using rule 24 (interval_list)

    note           go to state 31
    interval       go to state 34
    interval_list  go to state 42


State 35

   27 chord: note STAR interval_list .

    $default  reduce using rule 27 (chord)


State 36

   11 note: note . PLUS_SIGN interval
   12     | note . MINUS_SIGN interval
   21 interval: note . COLON note
   21         | note COLON note .  [error, UNDERSCORE, STAR, COLON, NEWLINE, BASIC_NOTE, INTERVAL_TYPE]

    MINUS_SIGN  shift, and go to state 19
    PLUS_SIGN   shift, and go to state 20

    $default  reduce using rule 21 (interval)

    Conflict between rule 21 and token MINUS_SIGN resolved as shift (COLON < MINUS_SIGN).
    Conflict between rule 21 and token PLUS_SIGN resolved as shift (COLON < PLUS_SIGN).
    Conflict between rule 21 and token COLON resolved as reduce (%left COLON).


State 37

   13 note: interval . PLUS_SIGN note
   22 interval: interval . PLUS_SIGN interval
   23         | interval . MINUS_SIGN interval

    MINUS_SIGN  shift, and go to state 23
    PLUS_SIGN   shift, and go to state 24


State 38

   13 note: interval . PLUS_SIGN note
   22 interval: interval . PLUS_SIGN interval
   23         | interval . MINUS_SIGN interval
   23         | interval MINUS_SIGN interval .  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, NEWLINE, BASIC_NOTE, INTERVAL_TYPE]

    $default  reduce using rule 23 (interval)

    Conflict between rule 23 and token MINUS_SIGN resolved as reduce (%left MINUS_SIGN).
    Conflict between rule 23 and token PLUS_SIGN resolved as reduce (%left PLUS_SIGN).


State 39

   11 note: note . PLUS_SIGN interval
   12     | note . MINUS_SIGN interval
   13     | interval PLUS_SIGN note .  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, NEWLINE, BASIC_NOTE, INTERVAL_TYPE]
   21 interval: note . COLON note

    $default  reduce using rule 13 (note)

    Conflict between rule 13 and token MINUS_SIGN resolved as reduce (%left MINUS_SIGN).
    Conflict between rule 13 and token PLUS_SIGN resolved as reduce (%left PLUS_SIGN).
    Conflict between rule 13 and token COLON resolved as reduce (COLON < PLUS_SIGN).


State 40

   13 note: interval . PLUS_SIGN note
   22 interval: interval . PLUS_SIGN interval
   22         | interval PLUS_SIGN interval .  [error, MINUS_SIGN, PLUS_SIGN, UNDERSCORE, STAR, COLON, NEWLINE, BASIC_NOTE, INTERVAL_TYPE]
   23         | interval . MINUS_SIGN interval

    $default  reduce using rule 22 (interval)

    Conflict between rule 22 and token MINUS_SIGN resolved as reduce (%left MINUS_SIGN).
    Conflict between rule 22 and token PLUS_SIGN resolved as reduce (%left PLUS_SIGN).


State 41

   10 note: . BASIC_NOTE offset octave
   11     | . note PLUS_SIGN interval
   12     | . note MINUS_SIGN interval
   13     | . interval PLUS_SIGN note
   20 interval: . INTERVAL_TYPE POS_INTEGER
   21         | . note COLON note
   22         | . interval PLUS_SIGN interval
   23         | . interval MINUS_SIGN interval
   24 interval_list: . %empty  [error, NEWLINE]
   25              | . interval interval_list
   26              | . interval UNDERSCORE interval_list
   26              | interval UNDERSCORE . interval_list

    BASIC_NOTE     shift, and go to state 5
    INTERVAL_TYPE  shift, and go to state 6

    $default  reduce using rule 24 (interval_list)

    note           go to state 31
    interval       go to state 34
    interval_list  go to state 43


State 42

   25 interval_list: interval interval_list .

    $default  reduce using rule 25 (interval_list)


State 43

   26 interval_list: interval UNDERSCORE interval_list .

    $default  reduce using rule 26 (interval_list)
